// open file that contains list of members and headers for member fields

// create an import member object that's empty

// read header

// add property on import member object

// repeat for all headers

// create a config per congregation that maps the column to the field in congregreat dbp

// allow person using tool to select from the import member object which fields go together

// hit import/start button

// read line by line to create an array of import member objects

// iterate over each import member object to set values for fields that were mapped for an insert

// this should get generated by reading in a file, may need different file readers/generators based on file types that are provided per congregation
const importMemberObject = {
  first_name: 'Jason',
  last_name: 'Brady',
  email_address: 'jason@email.com',
  phone_number: '8167395555'
}

// will have to be hand crafted per congregation
const mappingConfig = {
  Member: {
    firstName: 'first_name',
    lastName: 'last_name',
    email: 'email_address'
  },
  Phone: {
    number: 'phone_number'
  }
}

const map = (importMemberObject, mappingConfig) => {
  const object = {}
  const objectKeys = Object.keys(mappingConfig)
  objectKeys.forEach(objectKey => {
    object[objectKey] = {}
    const propertyKeys = Object.keys(mappingConfig[objectKey])
    propertyKeys.forEach(propertyKey => {
      object[objectKey][propertyKey] = importMemberObject[mappingConfig[objectKey][propertyKey]]
    })
  })

  return object
}

const result = map(importMemberObject, mappingConfig)
// result is
// {
//   Member: {
//     email: "jason@email.com",
//     firstName: "Jason",
//     lastName: "Brady"
//   },
//   Phone: {
//     number: "8167395555"
//   }
// }
